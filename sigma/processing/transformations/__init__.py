from typing import Dict
from sigma.processing.transformations.base import Transformation

transformations: Dict[str, Transformation] = {
    "field_name_mapping": FieldMappingTransformation,
    "field_name_prefix_mapping": FieldPrefixMappingTransformation,
    "field_name_transform": FieldFunctionTransformation,
    "drop_detection_item": DropDetectionItemTransformation,
    "hashes_fields": HashesFieldsDetectionItemTransformation,
    "field_name_suffix": AddFieldnameSuffixTransformation,
    "field_name_prefix": AddFieldnamePrefixTransformation,
    "wildcard_placeholders": WildcardPlaceholderTransformation,
    "value_placeholders": ValueListPlaceholderTransformation,
    "query_expression_placeholders": QueryExpressionPlaceholderTransformation,
    "add_condition": AddConditionTransformation,
    "change_logsource": ChangeLogsourceTransformation,
    "add_field": AddFieldTransformation,
    "remove_field": RemoveFieldTransformation,
    "set_field": SetFieldTransformation,
    "replace_string": ReplaceStringTransformation,
    "map_string": MapStringTransformation,
    "set_state": SetStateTransformation,
    "regex": RegexTransformation,
    "set_value": SetValueTransformation,
    "convert_type": ConvertTypeTransformation,
    "rule_failure": RuleFailureTransformation,
    "detection_item_failure": DetectionItemFailureTransformation,
    "set_custom_attribute": SetCustomAttributeTransformation,
    "nest": NestedProcessingTransformation,
}
